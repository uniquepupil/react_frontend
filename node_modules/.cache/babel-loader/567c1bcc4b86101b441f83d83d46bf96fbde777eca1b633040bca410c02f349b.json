{"ast":null,"code":"var _jsxFileName = \"/Users/parikshit/Desktop/untitled folder/my-react-website/src/components/ProtectedRoute.js\";\n// import React from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const ProtectedRoute = ({ children }) => {\n//   const isAuthenticated = localStorage.getItem('isAuthenticated');\n\n//   return isAuthenticated ? children : <Navigate to=\"/\" />;\n// };\n\n// export default ProtectedRoute;\n\n// import React from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const ProtectedRoute = ({ children }) => {\n//   const authToken = localStorage.getItem('authToken'); // Check for the token\n\n//   if (!authToken) {\n//     return <Navigate to=\"/\" replace />; // Redirect to login if not authenticated\n//   }\n\n//   return children; // Render the protected content\n// };\n\n// export default ProtectedRoute;\n\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 39\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","isAuthenticated","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parikshit/Desktop/untitled folder/my-react-website/src/components/ProtectedRoute.js"],"sourcesContent":["// import React from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const ProtectedRoute = ({ children }) => {\n//   const isAuthenticated = localStorage.getItem('isAuthenticated');\n\n//   return isAuthenticated ? children : <Navigate to=\"/\" />;\n// };\n\n// export default ProtectedRoute;\n\n// import React from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const ProtectedRoute = ({ children }) => {\n//   const authToken = localStorage.getItem('authToken'); // Check for the token\n\n//   if (!authToken) {\n//     return <Navigate to=\"/\" replace />; // Redirect to login if not authenticated\n//   }\n\n//   return children; // Render the protected content\n// };\n\n// export default ProtectedRoute;\n\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ children }) => {\n  const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';\n  return isAuthenticated ? children : <Navigate to=\"/\" />;\n};\n\nexport default ProtectedRoute;\n\n"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;EAC1E,OAAOF,eAAe,GAAGD,QAAQ,gBAAGF,OAAA,CAACF,QAAQ;IAACQ,EAAE,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;AAACC,EAAA,GAHIV,cAAc;AAKpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}